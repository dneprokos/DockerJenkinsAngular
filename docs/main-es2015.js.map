{"version":3,"file":"main-es2015.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_components/check-boxes/check-boxes.component.ts","./src/app/_components/check-boxes/check-boxes.component.html","./src/app/_components/date-pickers/date-pickers.component.ts","./src/app/_components/date-pickers/date-pickers.component.html","./src/app/_components/drop-downs/drop-downs.component.ts","./src/app/_components/drop-downs/drop-downs.component.html","./src/app/_components/end-to-end/end-to-end.component.ts","./src/app/_components/end-to-end/end-to-end.component.html","./src/app/_components/footer/footer.component.ts","./src/app/_components/footer/footer.component.html","./src/app/_components/home/home.component.ts","./src/app/_components/home/home.component.html","./src/app/_components/input-fields/input-fields.component.ts","./src/app/_components/input-fields/input-fields.component.html","./src/app/_components/list-boxes/list-boxes.component.ts","./src/app/_components/list-boxes/list-boxes.component.html","./src/app/_components/login/login.component.ts","./src/app/_components/login/login.component.html","./src/app/_components/nav-bar/nav-bar.component.ts","./src/app/_components/nav-bar/nav-bar.component.html","./src/app/_components/radio-buttons/radio-buttons.component.ts","./src/app/_components/radio-buttons/radio-buttons.component.html","./src/app/_components/table-page/table-page.component.ts","./src/app/_components/table-page/table-page.component.html","./src/app/_components/toggles/toggles.component.ts","./src/app/_components/toggles/toggles.component.html","./src/app/_core/material.module.ts","./src/app/_services/auth-guard.service.ts","./src/app/_services/authService/auth-service.service.ts","./src/app/_services/global-events-manager.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport {ThemePalette} from '@angular/material/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-check-boxes',\r\n  templateUrl: './check-boxes.component.html',\r\n  styleUrls: ['./check-boxes.component.css']\r\n})\r\nexport class CheckBoxesComponent implements OnInit {\r\n  checked = false;\r\n  toppings: FormGroup;\r\n  task: Task = {\r\n    name: 'Indeterminate',\r\n    completed: false,\r\n    color: 'primary',\r\n    subtasks: [\r\n      {name: 'Primary', completed: false, color: 'primary'},\r\n      {name: 'Accent', completed: false, color: 'accent'},\r\n      {name: 'Warn', completed: false, color: 'warn'}\r\n    ]\r\n  };\r\n\r\n  allComplete: boolean = false;\r\n\r\n  ngOnInit() {\r\n  }\r\n  constructor() {}\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.task.subtasks != null && this.task.subtasks.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(): boolean {\r\n    if (this.task.subtasks == null) {\r\n      return false;\r\n    }\r\n    return this.task.subtasks.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.task.subtasks == null) {\r\n      return;\r\n    }\r\n    this.task.subtasks.forEach(t => t.completed = completed);\r\n  }\r\n}\r\n","\r\n<h1>Check-boxes practice</h1>\r\n<mat-card>\r\n    <section class=\"example-section\">\r\n        <span class=\"example-list-section\">\r\n          <mat-checkbox class=\"example-margin\"\r\n                        [checked]=\"allComplete\"\r\n                        [color]=\"task.color\"\r\n                        [indeterminate]=\"someComplete()\"\r\n                        (change)=\"setAll($event.checked)\">\r\n            {{task.name}}\r\n          </mat-checkbox>\r\n        </span>\r\n        <span class=\"example-list-section\">\r\n          <ul>\r\n            <li *ngFor=\"let subtask of task.subtasks\">\r\n              <mat-checkbox [(ngModel)]=\"subtask.completed\"\r\n                            [color]=\"subtask.color\"\r\n                            (ngModelChange)=\"updateAllComplete()\">\r\n                {{subtask.name}}\r\n              </mat-checkbox>\r\n            </li>\r\n          </ul>\r\n        </span>\r\n      </section>\r\n</mat-card> ","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, FormControl} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-date-pickers',\r\n  templateUrl: './date-pickers.component.html',\r\n  styleUrls: ['./date-pickers.component.css']\r\n})\r\nexport class DatePickersComponent implements OnInit {\r\n  campaignOne: FormGroup;\r\n  campaignTwo: FormGroup;\r\n\r\n  constructor() {\r\n    const today = new Date();\r\n    const month = today.getMonth();\r\n    const year = today.getFullYear();\r\n\r\n    this.campaignOne = new FormGroup({\r\n      start: new FormControl(new Date(year, month, 13)),\r\n      end: new FormControl(new Date(year, month, 16))\r\n    });\r\n\r\n    this.campaignTwo = new FormGroup({\r\n      start: new FormControl(new Date(year, month, 15)),\r\n      end: new FormControl(new Date(year, month, 19))\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-form-field appearance=\"fill\" class=\"example-form-field\">\r\n    <mat-label>Choose a date</mat-label>\r\n    <input matInput [matDatepicker]=\"datepicker\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #datepicker>\r\n      <mat-datepicker-actions>\r\n        <button mat-button matDatepickerCancel>Cancel</button>\r\n        <button mat-raised-button color=\"primary\" matDatepickerApply>Apply</button>\r\n      </mat-datepicker-actions>\r\n    </mat-datepicker>\r\n  </mat-form-field>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-form-field appearance=\"fill\" class=\"example-form-field\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [rangePicker]=\"rangePicker\">\r\n      <input matStartDate placeholder=\"Start date\">\r\n      <input matEndDate placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #rangePicker>\r\n      <mat-date-range-picker-actions>\r\n        <button mat-button matDateRangePickerCancel>Cancel</button>\r\n        <button mat-raised-button color=\"primary\" matDateRangePickerApply>Apply</button>\r\n      </mat-date-range-picker-actions>\r\n    </mat-date-range-picker>\r\n  </mat-form-field>\r\n</mat-card>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\ninterface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface Car {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-drop-downs',\r\n  templateUrl: './drop-downs.component.html',\r\n  styleUrls: ['./drop-downs.component.css']\r\n})\r\nexport class DropDownsComponent implements OnInit {\r\n  selectedValue: string;\r\n  selectedCar: string;\r\n\r\n  foods: Food[] = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n  cars: Car[] = [\r\n    {value: 'ford', viewValue: 'Ford'},\r\n    {value: 'volvo', viewValue: 'Volvo'},\r\n    {value: 'saab', viewValue: 'Saab'},\r\n    {value: 'mercedes', viewValue: 'Mercedes'}\r\n  ];\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n<form>\r\n    <h4>mat-select</h4>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Favorite food</mat-label>\r\n      <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\r\n        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n          {{food.viewValue}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <p> Selected food: {{selectedValue}} </p>\r\n    <h4>native html select</h4>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Favorite car</mat-label>\r\n      <select matNativeControl [(ngModel)]=\"selectedCar\" name=\"car\">\r\n        <option value=\"\" selected></option>\r\n        <option *ngFor=\"let car of cars\" [value]=\"car.value\">\r\n          {{car.viewValue}}\r\n        </option>\r\n      </select>\r\n    </mat-form-field>\r\n    <p> Selected car: {{selectedCar}} </p>\r\n  </form>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-end-to-end',\r\n  templateUrl: './end-to-end.component.html',\r\n  styleUrls: ['./end-to-end.component.css']\r\n})\r\nexport class EndToEndComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>end-to-end works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalEventsManagerService } from 'src/app/_services/global-events-manager.service';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  isComponentShown: boolean;\r\n\r\n  createdYear: Date = new Date(2019, 8, 6);\r\n  yearNow:Date = new Date();\r\n  email: string = 'dneprokos@gmail.com';\r\n  skype: string = 'dneprokos';\r\n\r\n\r\n  constructor(private globalEventsManager: GlobalEventsManagerService) {\r\n    this.globalEventsManager.showNavBarEmitter.subscribe((mode)=>{           \r\n      this.isComponentShown = mode;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar\" *ngIf=\"isComponentShown\">\r\n    <mat-toolbar color=\"primary\">\r\n        18+\r\n        <div class=\"text\">\r\n            <p>Created by <b>Kostiantyn Teltov</b> for training purposes.\r\n                {{ createdYear | date: 'yyyy' }} - {{ yearNow | date: 'yyyy' }}\r\n                @NON-COMMERCIAL USE PERMITTED\r\n            </p>\r\n            <p>\r\n                <b>Contact Email:</b>{{ email }};\r\n                <b>Skype:</b> {{ skype }}.\r\n            </p>\r\n        </div>\r\n\r\n    </mat-toolbar>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  dockerText: string = `Docker is a set of coupled software-as-a-service and platform-as-a-service products that \r\n  use operating-system-level virtualization to develop and deliver software in packages called containers.\r\n  The software that hosts the containers is called Docker Engine. It was first started in 2013 and is developed by Docker, Inc. \r\n  The service has both free and premium tiers. Containers are isolated from one another and bundle their own software, libraries \r\n  and configuration files; they can communicate with each other through well-defined channels. All containers are run by a single \r\n  operating-system kernel and are thus more lightweight than virtual machines. Containers are created from images that specify their \r\n  precise contents. Images are often created by combining and modifying standard images downloaded from public repositories. \r\n  Docker is developed primarily for Linux, where it uses the resource isolation features of the Linux kernel such as cgroups and \r\n  kernel namespaces, and a union-capable file system such as OverlayFS and others[28] to allow independent containers to run within \r\n  a single Linux instance, avoiding the overhead of starting and maintaining virtual machines (VMs).[29] The Linux kernel's support \r\n  for namespaces mostly[30] isolates an application's view of the operating environment, including process trees, network, user IDs \r\n  and mounted file systems, while the kernel's cgroups provide resource limiting for memory and CPU.[31] Since version 0.9, \r\n  Docker includes the libcontainer library as its own way to directly use virtualization facilities provided by the Linux kernel, \r\n  in addition to using abstracted virtualization interfaces via libvirt, LXC and systemd-nspawn.`\r\n\r\n  jenkinsText: string = `Jenkins is an open source automation server written in Java. Jenkins helps to automate the non-human part \r\n  of the software development process, with continuous integration and facilitating technical aspects of continuous delivery. \r\n  It is a server-based system that runs in servlet containers such as Apache Tomcat.\r\n    \\n\\It supports version control tools, including AccuRev, CVS, Subversion, Git, Mercurial, Perforce, TD/OMS, ClearCase and RTC, \r\n  and can execute Apache Ant, Apache Maven and sbt based projects as well as arbitrary shell scripts and Windows batch commands. \r\n  The creator of Jenkins is Kohsuke Kawaguchi. Released under the MIT License, Jenkins is free software. Builds can be triggered by \r\n  various means, for example by commit in a version control system, by scheduling via a cron-like mechanism and by requesting a \r\n  specific build URL. It can also be triggered after the other builds in the queue have completed. Jenkins functionality can be extended \r\n  with plugins.\r\n\r\n  The Jenkins project was originally named Hudson, and was renamed after a dispute with Oracle, which had forked the project and \r\n  claimed rights to the project name. The Oracle fork, Hudson, continued to be developed for a time before being donated to the Eclipse Foundation. \r\n  Oracle's Hudson is no longer maintained and was announced as obsolete in February 2017.`\r\n\r\n\r\n}\r\n","<h1>Test website designed for the automation practice. I know, site design is painful. \r\n        <i class=\"material-icons\">sentiment_very_satisfied</i>\r\n</h1>\r\n<mat-grid-list cols=\"4\" rowHeight=\"2:2\" gutterSize=\"20px\" >\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n            <img style=\"padding: 30px\" mat-card-image width=\"80%\" height=\"80%\" src=\"../../../assets/images/homePage/Docker1.png\" alt=\"Docker1 photo\"> \r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n            <img class=\"image\" mat-card-image width=\"100%\" height=\"80%\" src=\"../../../assets/images/homePage/Docker2.png\" alt=\"Docker2 photo\">\r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n            <img style=\"padding: 30px\" mat-card-image width=\"80%\" height=\"80%\" src=\"../../../assets/images/homePage/Jenkins1.png\" alt=\"Jenkins1 photo\">\r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\r\n            <img class=\"longImage\" mat-card-image width=\"100%\" height=\"80%\" src=\"../../../assets/images/homePage/Jenkins2.jpg\" alt=\"Jenkins2 photo\">\r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\">\r\n        <div class=\"text\">{{ dockerText }}</div>   \r\n    </mat-grid-tile>\r\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"2\">\r\n        <div class=\"text\">{{ jenkinsText }}</div>\r\n    </mat-grid-tile>\r\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-fields',\r\n  templateUrl: './input-fields.component.html',\r\n  styleUrls: ['./input-fields.component.css']\r\n})\r\nexport class InputFieldsComponent implements OnInit {\r\n  firstName: string\r\n  lastName: string\r\n  primaryProgrammingLanguage: string\r\n  otherProgrammingLenguages: string\r\n  yearsExperience: string\r\n  city: string\r\n\r\n  shortResume: string\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  print(): void {\r\n    this.shortResume = null\r\n    console.log(this.firstName);\r\n    console.log(this.lastName);\r\n\r\n    this.shortResume = `\r\n      Here is a short Candidate resume:\r\n      \\tFirst Name: ${this.firstName}\r\n      \\tLast Name: ${this.lastName}\r\n      \\tPrimary programming language: ${this.primaryProgrammingLanguage}\r\n      \\tOther programming languages: ${this.otherProgrammingLenguages}\r\n      \\tTotal years of experience in QA area: ${this.yearsExperience}\r\n      \\tLiving in: ${this.city}  \r\n    `\r\n  }\r\n\r\n}\r\n","<p>input-fields works!</p>\r\n<mat-card>\r\n<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Role (disabled)</mat-label>\r\n      <input matInput disabled value=\"QA Automation\">\r\n    </mat-form-field>\r\n  \r\n    <table class=\"example-full-width\" cellspacing=\"0\">\r\n        <tr>\r\n      <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n        <mat-label>First name</mat-label>\r\n        <input [(ngModel)]=\"firstName\" name=\"firstName\" matInput id=\"firstName\">\r\n      </mat-form-field></td>\r\n      <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n        <mat-label>Long Last Name That Will Be Truncated</mat-label>\r\n        <input [(ngModel)]=\"lastName\" name=\"lastName\" matInput id=\"lastName\">\r\n      </mat-form-field></td>\r\n      <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n        <mat-label>Prefered language</mat-label>\r\n        <input [(ngModel)]=\"primaryProgrammingLanguage\" name=\"primaryProgrammingLanguage\" matInput placeholder=\"C#\">\r\n            </mat-form-field>\r\n        </td>\r\n        </tr>\r\n    </table>\r\n  \r\n    <table class=\"example-full-width\" cellspacing=\"0\">\r\n        <tr>\r\n            <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                <mat-label>Other programming languages</mat-label>\r\n                <input matInput [(ngModel)]=\"otherProgrammingLenguages\" name=\"otherProgrammingLenguages\">\r\n              </mat-form-field>\r\n            </td>\r\n            <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                <mat-label>Total years experience</mat-label>\r\n                <input matInput [(ngModel)]=\"yearsExperience\" name=\"yearsExperience\">\r\n              </mat-form-field>\r\n            </td>\r\n            <td><mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                <mat-label>City</mat-label>\r\n                <input matInput [(ngModel)]=\"city\" name=\"city\">\r\n              </mat-form-field>\r\n            </td>\r\n        </tr\r\n    ></table>\r\n  </form>\r\n    <mat-card-actions>\r\n        <button id=\"print\" mat-raised-button (click)=\"print()\" color=\"primary\">Print details</button>\r\n    </mat-card-actions>\r\n    <form class=\"example-form\">\r\n        <mat-form-field class=\"resume-text\" appearance=\"fill\">\r\n            <mat-label>Data will be prineted here</mat-label>\r\n            <textarea disabled matInput [(ngModel)]=\"shortResume\" name=\"shortResume\"></textarea>\r\n        </mat-form-field>\r\n    </form> \r\n</mat-card>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list-boxes',\r\n  templateUrl: './list-boxes.component.html',\r\n  styleUrls: ['./list-boxes.component.css']\r\n})\r\nexport class ListBoxesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>list-boxes works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthServiceService } from 'src/app/_services/authService/auth-service.service';\r\nimport { GlobalEventsManagerService } from 'src/app/_services/global-events-manager.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: string;\r\n  password: string;\r\n  showSpinner: boolean;\r\n\r\n  constructor(private router: Router, private authService: AuthServiceService, private globalEventsManager: GlobalEventsManagerService) { }\r\n\r\n  ngOnInit() {\r\n    this.globalEventsManager.showNavBar(false);\r\n  }\r\n\r\n  login() : void {\r\n    let result = this.authService.login(this.username, this.password);\r\n    \r\n    if (result){\r\n      this.globalEventsManager.showNavBar(true);   \r\n      this.router.navigate(['home']);\r\n      this.globalEventsManager.updateUserName(true);\r\n    }      \r\n    else alert(\"Invalid credentials\");\r\n  }\r\n\r\n}\r\n","<div class=\"main-div\">\r\n<mat-card class=\"example-card\" layout=\"row\" layout-align=\"center center\">\r\n    <mat-card-header>\r\n        <mat-card-title>Login</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <form class=\"example-form\">\r\n            <table class=\"example-full-width\" cellspacing=\"0\">\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <input id=\"login\" matTooltip=\"Use 'test@test.com' as user\" matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>                            \r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <input id=\"password\" matTooltip=\"Use 'test' as password\" matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\"\r\n                                name=\"password\" required>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </form>\r\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button id=\"loginBtn\" mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\r\n    </mat-card-actions>\r\n</mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalEventsManagerService } from 'src/app/_services/global-events-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthServiceService } from 'src/app/_services/authService/auth-service.service';\r\n\r\n@Component({\r\n  selector: 'nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  isComponentShown: boolean;\r\n  userName: string;\r\n\r\n  constructor(private globalEventsManager: GlobalEventsManagerService, private router: Router, private authService: AuthServiceService) {\r\n    this.globalEventsManager.showNavBarEmitter.subscribe((mode)=>{           \r\n      this.isComponentShown = mode;\r\n    });\r\n    globalEventsManager.showUserNameEmitter.subscribe((mode)=>{\r\n      if (mode) this.userName = this.authService.getCurrentUser();\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.globalEventsManager.showNavBar(true);\r\n    this.userName = this.authService.getCurrentUser();\r\n  }\r\n\r\n  SignOut() {\r\n    this.performSignOut();\r\n  }\r\n\r\n  private performSignOut(){\r\n    this.router.navigate(['login']);\r\n    this.globalEventsManager.showNavBar(false);\r\n    this.authService.logout();\r\n    this.userName = undefined;\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar\" *ngIf=\"isComponentShown\">\r\n    <mat-toolbar color=\"primary\">\r\n        <mat-toolbar-row class=\"content\">\r\n            <div fxShow=\"true\" fxHide.lt-md=\"true\">\r\n                <span>DockerJenkinsAngular</span>\r\n                <span class=\"example-spacer\"></span>\r\n            </div>\r\n            <div fxShow=\"true\" fxHide.lt-md=\"true\">\r\n                <!-- The following menu items will be hidden on both SM and XS screen sizes -->\r\n                <div>\r\n                    <a mat-button [routerLink]=\"'home'\">\r\n                        <mat-icon>home</mat-icon>\r\n                        Home\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'check-box'\">\r\n                        <mat-icon>check_circle</mat-icon>\r\n                        Check-boxes\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'input'\">\r\n                        <mat-icon>text_fields</mat-icon>\r\n                        Input fields\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'drop-down'\">\r\n                        <mat-icon>arrow_drop_down_circle</mat-icon>\r\n                        Drop-downs\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'radio-button'\">\r\n                        <mat-icon>radio_button_checked</mat-icon>\r\n                        Radio-buttons\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'table'\">\r\n                        <mat-icon>table_chart</mat-icon>\r\n                        Table\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'toggle'\">\r\n                        <mat-icon>share</mat-icon>\r\n                        Toggles\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'date-picker'\">\r\n                        <mat-icon>date_range</mat-icon>\r\n                        Date pickers\r\n                    </a>\r\n                    <a mat-button [routerLink]=\"'end-to-end'\">\r\n                        <mat-icon>trending_up</mat-icon>\r\n                        E2E scenario\r\n                        <mat-icon>trending_down</mat-icon>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"account\">\r\n                <mat-menu #appMenu=\"matMenu\">\r\n                    <ng-template matMenuContent let-name=\"name\">\r\n                        <button mat-menu-item id=\"settingsBtn\">\r\n                            Settings\r\n                            <mat-icon>settings</mat-icon>\r\n                        </button>\r\n                        <button (click)=\"SignOut()\" mat-menu-item id=\"signOutBtn\">\r\n                            Log off\r\n                            <mat-icon>work_off</mat-icon>\r\n                        </button>\r\n                    </ng-template>\r\n                </mat-menu>\r\n                <button id=\"appMenu\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\r\n                    <mat-icon md-36>account_circle</mat-icon>\r\n                    <mat-label>{{ userName }}</mat-label>\r\n                </button>\r\n            </div>\r\n        </mat-toolbar-row>\r\n        <mat-toolbar-row class=\"content\">\r\n            <span style=\"font-size: 12px;\">Simple website designed for Docker practice</span>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-radio-buttons',\r\n  templateUrl: './radio-buttons.component.html',\r\n  styleUrls: ['./radio-buttons.component.css']\r\n})\r\nexport class RadioButtonsComponent implements OnInit {\r\n  favoriteSeason: string;\r\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n<label id=\"example-radio-group-label\">Pick your favorite season</label>\r\n<mat-radio-group\r\n  aria-labelledby=\"example-radio-group-label\"\r\n  class=\"example-radio-group\"\r\n  [(ngModel)]=\"favoriteSeason\">\r\n  <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n    {{season}}\r\n  </mat-radio-button>\r\n</mat-radio-group>\r\n<div>Your favorite season is: {{favoriteSeason}}</div>\r\n</mat-card>\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  fruit: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst FRUITS: string[] = [\r\n  'blueberry', 'lychee', 'kiwi', 'mango', 'peach', 'lime', 'pomegranate', 'pineapple'\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\r\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\r\n];\r\n\r\n@Component({\r\n  selector: 'app-table-page',\r\n  templateUrl: './table-page.component.html',\r\n  styleUrls: ['./table-page.component.css']\r\n})\r\nexport class TablePageComponent implements AfterViewInit  {\r\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\r\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))]\r\n  };\r\n}\r\n","<mat-form-field appearance=\"standard\">\r\n    <div class=\"filter\">\r\n      <mat-label>Filter</mat-label>\r\n      <input class=\"filter input\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n    </div>  \r\n  </mat-form-field>\r\n  \r\n  <div class=\"mat-elevation-z8\">\r\n    <table class=\"table\" mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- ID Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Progress Column -->\r\n      <ng-container matColumnDef=\"progress\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n      </ng-container>\r\n  \r\n      <!-- Fruit Column -->\r\n      <ng-container matColumnDef=\"fruit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\r\n      </ng-container>\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ThemePalette} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-toggles',\r\n  templateUrl: './toggles.component.html',\r\n  styleUrls: ['./toggles.component.css']\r\n})\r\nexport class TogglesComponent implements OnInit {\r\n  color: ThemePalette = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n      <h2 class=\"example-h2\">Slider configuration</h2>\r\n  \r\n      <section class=\"example-section\">\r\n        <label class=\"example-margin\">Color:</label>\r\n        <mat-radio-group [(ngModel)]=\"color\">\r\n          <mat-radio-button class=\"example-margin\" value=\"primary\">\r\n            Primary\r\n          </mat-radio-button>\r\n          <mat-radio-button class=\"example-margin\" value=\"accent\">\r\n            Accent\r\n          </mat-radio-button>\r\n          <mat-radio-button class=\"example-margin\" value=\"warn\">\r\n            Warn\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </section>\r\n  \r\n      <section class=\"example-section\">\r\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n      </section>\r\n  \r\n      <section class=\"example-section\">\r\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n      </section>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  \r\n  <mat-card class=\"result\">\r\n    <mat-card-content>\r\n      <h2 class=\"example-h2\">Result</h2>\r\n  \r\n      <section class=\"example-section\">\r\n        <mat-slide-toggle\r\n            class=\"example-margin\"\r\n            [color]=\"color\"\r\n            [checked]=\"checked\"\r\n            [disabled]=\"disabled\">\r\n          Slide me!\r\n        </mat-slide-toggle>\r\n      </section>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule,  } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule, \r\n  MatToolbarModule,\r\n  MatButtonModule, \r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatTooltipModule,\r\n  MatCheckboxModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  MatPaginatorModule,\r\n  MatSlideToggleModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule\r\n  ],\r\n  exports: [\r\n  CommonModule,\r\n   MatToolbarModule, \r\n   MatButtonModule, \r\n   MatCardModule, \r\n   MatInputModule, \r\n   MatDialogModule, \r\n   MatTableModule, \r\n   MatMenuModule,\r\n   MatIconModule,\r\n   MatProgressSpinnerModule,\r\n   MatSidenavModule,\r\n   MatListModule,\r\n   MatGridListModule,\r\n   MatTooltipModule,\r\n   MatCheckboxModule,\r\n   MatSelectModule,\r\n   MatRadioModule,\r\n   MatPaginatorModule,\r\n   MatSlideToggleModule,\r\n   MatDatepickerModule,\r\n   MatNativeDateModule\r\n   ]\r\n})\r\nexport class CustomMaterialModule { }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthServiceService } from './authService/auth-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  canActivate() {\r\n    let result = this.authService.isUserLogged();\r\n\r\n    if (result) return true;\r\n\r\n    this.router.navigate([\"login\"]);\r\n    return false;\r\n  }\r\n\r\n  constructor(private authService: AuthServiceService, private router: Router) {\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Credentials } from 'src/app/_interfaces/credentials';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthServiceService {\r\n  expectedCredentials: Credentials = { userName: 'test@test.com', password: 'test' };\r\n\r\n  constructor() { }\r\n\r\n  login(userName: string, password: string): Boolean {\r\n    console.log(userName, password);\r\n\r\n\r\n    if (userName.toLocaleLowerCase() === this.expectedCredentials.userName &&\r\n     password === this.expectedCredentials.password) {\r\n      sessionStorage.setItem('user', 'admin');\r\n      return true\r\n    }\r\n    else return false;\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.removeItem('user');\r\n  }\r\n\r\n  isUserLogged(): Boolean{\r\n    let userName = this.getCurrentUser(); \r\n    \r\n    if (userName && userName === 'admin') return true;    \r\n    return false;\r\n  }\r\n\r\n  getCurrentUser(): string {\r\n    return sessionStorage.getItem('user');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalEventsManagerService {\r\n  private _showNavBar: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public showNavBarEmitter: Observable<boolean> = this._showNavBar.asObservable();\r\n\r\n  private _showUserName: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public showUserNameEmitter: Observable<boolean> = this._showUserName.asObservable(); \r\n\r\n  constructor() { }\r\n\r\n  showNavBar(ifShow: boolean) {\r\n    this._showNavBar.next(ifShow);\r\n  }\r\n\r\n  updateUserName(isUserUpdate: boolean) {\r\n    this._showUserName.next(isUserUpdate);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { CheckBoxesComponent } from './_components/check-boxes/check-boxes.component';\r\nimport { InputFieldsComponent } from './_components/input-fields/input-fields.component';\r\nimport { DropDownsComponent } from './_components/drop-downs/drop-downs.component';\r\nimport { RadioButtonsComponent } from './_components/radio-buttons/radio-buttons.component';\r\nimport { TogglesComponent } from './_components/toggles/toggles.component';\r\nimport { DatePickersComponent } from './_components/date-pickers/date-pickers.component';\r\nimport { TablePageComponent } from './_components/table-page/table-page.component';\r\nimport { EndToEndComponent } from './_components/end-to-end/end-to-end.component';\r\nimport { AuthGuardService } from './_services/auth-guard.service';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuardService] },\r\n  { path: 'check-box', component: CheckBoxesComponent, canActivate: [AuthGuardService] },\r\n  { path: 'input', component: InputFieldsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'drop-down', component: DropDownsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'radio-button', component: RadioButtonsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'table', component: TablePageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'toggle', component: TogglesComponent, canActivate: [AuthGuardService] },\r\n  { path: 'date-picker', component: DatePickersComponent, canActivate: [AuthGuardService] },\r\n  { path: 'end-to-end', component: EndToEndComponent, canActivate: [AuthGuardService] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthServiceService } from './_services/authService/auth-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  ngOnInit() {\r\n    this.navigateUserToStartPage();\r\n  }\r\n\r\n  constructor(private authService: AuthServiceService, private router: Router) {       \r\n  }\r\n\r\n  title = 'DockerJenkinsAngular';\r\n\r\n  private navigateUserToStartPage(){\r\n    let isUserLoggedIn = this.authService.isUserLogged()\r\n\r\n    if (isUserLoggedIn) this.router.navigate(['home']);\r\n    else this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<div class=\"mainConteiner\">\r\n<div class=\"navigation\">\r\n    <nav-bar></nav-bar>\r\n</div>\r\n<div class=\"content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<div class=\"footer\">\r\n    <footer></footer>\r\n</div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CustomMaterialModule } from './_core/material.module';\r\nimport { LoginComponent } from './_components/login/login.component';\r\nimport { HomeComponent } from './_components/home/home.component';\r\nimport { AuthServiceService } from './_services/authService/auth-service.service';\r\nimport { AuthGuardService } from './_services/auth-guard.service';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NavBarComponent } from './_components/nav-bar/nav-bar.component';\r\nimport { GlobalEventsManagerService } from './_services/global-events-manager.service';\r\nimport { FooterComponent } from './_components/footer/footer.component';\r\nimport { CheckBoxesComponent } from './_components/check-boxes/check-boxes.component';\r\nimport { InputFieldsComponent } from './_components/input-fields/input-fields.component';\r\nimport { DropDownsComponent } from './_components/drop-downs/drop-downs.component';\r\nimport { RadioButtonsComponent } from './_components/radio-buttons/radio-buttons.component';\r\nimport { ListBoxesComponent } from './_components/list-boxes/list-boxes.component';\r\nimport { TogglesComponent } from './_components/toggles/toggles.component';\r\nimport { DatePickersComponent } from './_components/date-pickers/date-pickers.component';\r\nimport { TablePageComponent } from './_components/table-page/table-page.component';\r\nimport { EndToEndComponent } from './_components/end-to-end/end-to-end.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    FooterComponent,\r\n    CheckBoxesComponent,\r\n    InputFieldsComponent,\r\n    DropDownsComponent,\r\n    RadioButtonsComponent,\r\n    ListBoxesComponent,\r\n    TogglesComponent,\r\n    DatePickersComponent,\r\n    TablePageComponent,\r\n    EndToEndComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CustomMaterialModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    AuthServiceService,\r\n    AuthGuardService,\r\n    GlobalEventsManagerService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}